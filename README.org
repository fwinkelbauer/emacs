#+TITLE: Emacs Configuration
#+STARTUP: content

* Introduction

I am currently running GNU Emacs 25.3.1.

* OS Detection

#+BEGIN_SRC emacs-lisp
  (setq IS-LINUX (eq system-type 'gnu/linux)
        IS-WINDOWS (eq system-type 'windows-nt))
#+END_SRC

* General

Simplify confirmation:

#+BEGIN_SRC emacs-lisp
  (fset 'yes-or-no-p 'y-or-n-p)
#+END_SRC

Reload a file if it changed on disk:

#+BEGIN_SRC emacs-lisp
  (global-auto-revert-mode t)
#+END_SRC

Disable backup and auto save files:

#+BEGIN_SRC emacs-lisp
  (setq backup-inhibited t)
  (setq auto-save-default nil)
#+END_SRC

Disable audio bell:

#+BEGIN_SRC emacs-lisp
  (setq visible-bell t)
#+END_SRC

Hide startup message and empty scratch buffer:

#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-message t)
  (setq initial-scratch-message nil)
#+END_SRC

Garbage collection:

#+BEGIN_SRC emacs-lisp
  (setq gc-cons-threshold 20000000)
#+END_SRC

Always start in fullscreen:

#+BEGIN_SRC emacs-lisp
  (add-to-list 'initial-frame-alist '(fullscreen . maximized))
#+END_SRC

I used to get errors in the login process when doing a ~git push~ on Windows.
This should fix it:

#+BEGIN_SRC emacs-lisp
  (if IS-WINDOWS
      (setenv "GIT_ASKPASS" "git-gui--askpass"))
#+END_SRC

* Text

Prefer UTF-8. This code is based on this [[https://rufflewind.com/2014-07-20/pasting-unicode-in-emacs-on-windows][StackOverflow post]]:

#+BEGIN_SRC emacs-lisp
  (set-language-environment 'utf-8)
  (set-keyboard-coding-system 'utf-8)
  (setq locale-coding-system 'utf-8)
  (set-default-coding-systems 'utf-8)
  (set-terminal-coding-system 'utf-8)
  (set-selection-coding-system
   (if IS-WINDOWS
       'utf-16-le
     'utf-8))
  (prefer-coding-system 'utf-8)
#+END_SRC

Set default line length:

#+BEGIN_SRC emacs-lisp
  (setq-default fill-column 80)
#+END_SRC

Overwrite selected text when typing:

#+BEGIN_SRC emacs-lisp
  (delete-selection-mode t)
#+END_SRC

Ensure that files end with a new line:

#+BEGIN_SRC emacs-lisp
  (setq require-final-newline t)
#+END_SRC

Mark matching pairs of parentheses:

#+BEGIN_SRC emacs-lisp
  (show-paren-mode t)
  (setq show-paren-delay 0.0)
#+END_SRC

Spaces > Tabs:

#+BEGIN_SRC emacs-lisp
  (setq-default indent-tabs-mode nil)
#+END_SRC

Use single space after a sentence:

#+BEGIN_SRC emacs-lisp
  (setq sentence-end-double-space nil)
#+END_SRC

Delete trailing whitespace on save:

#+BEGIN_SRC emacs-lisp
  (add-hook 'before-save-hook 'delete-trailing-whitespace)
#+END_SRC

* Styling

Hide toolbar:

#+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
#+END_SRC

Set the default font:

#+BEGIN_SRC emacs-lisp
  (set-face-attribute 'default nil
                      :family "Roboto Mono Medium"
                      :height 120
                      :weight 'normal
                      :width 'normal)
#+END_SRC

Enable column numbers:

#+BEGIN_SRC emacs-lisp
  (setq column-number-mode t)
#+END_SRC

Highlight current line:

#+BEGIN_SRC emacs-lisp
  (when window-system
    (global-hl-line-mode))
#+END_SRC

* Buffer

Use ibuffer:

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x C-b") 'ibuffer)
  (setq-default ibuffer-saved-filter-groups
                `(("Default"
                   ("Temporary" (name . "\*.*\*"))
                   ("Magit" (name . "^magit"))
                   ("Dired" (mode . dired-mode))
                   )))
  (add-hook 'ibuffer-mode-hook
            (lambda ()
              (ibuffer-auto-mode 1)
              (ibuffer-switch-to-saved-filter-groups "Default")))
  (setq ibuffer-show-empty-filter-groups nil)
  (setq ibuffer-expert t)
#+END_SRC

~C-x k~ should kill the current buffer:

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x k") 'kill-this-buffer)
#+END_SRC

* Calendar

Dates should be displayed in the format year/month/day:

#+BEGIN_SRC emacs-lisp
  (calendar-set-date-style 'iso)
#+END_SRC

I'd like to use my native language when viewing my calendar:

#+BEGIN_SRC emacs-lisp
  (setq calendar-week-start-day 1
        calendar-day-name-array ["Sonntag" "Montag" "Dienstag" "Mittwoch"
                                 "Donnerstag" "Freitag" "Samstag"]
        calendar-month-name-array ["Jaenner" "Februar" "Maerz" "April" "Mai"
                                   "Juni" "Juli" "August" "September" "Oktober" "November" "Dezember"])
#+END_SRC

* Flyspell

I haven't found a way to get ~hunspell~ working on my Windows machine, so I'm
only using spell checkers on Linux:

#+BEGIN_SRC emacs-lisp
  (if IS-LINUX
      (progn
        (add-hook 'markdown-mode-hook 'flyspell-mode)
        (add-hook 'gfm-mode-hook 'flyspell-mode)
        (add-hook 'org-mode-hook 'flyspell-mode)
        (add-hook 'git-commit-mode-hook 'flyspell-mode)))
#+END_SRC

* Org

#+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook 'turn-on-auto-fill)
  (setq org-catch-invisible-edits 'smart)
  (setq org-src-fontify-natively t)
  (setq org-src-tab-acts-natively t)
  (setq org-src-window-setup 'current-window)
  (setq org-log-into-drawer t)
  (setq org-enforce-todo-dependencies t)
  (setq org-enforce-todo-checkbox-dependencies t)
  (setq initial-major-mode 'org-mode)
  (global-set-key "\C-ca" 'org-agenda)
  (global-set-key "\C-cc" 'org-capture)
  (setq org-icalendar-include-body 0)
  (setq org-icalendar-timezone "Europe/Berlin")
#+END_SRC

* External Packages

** Themes

A [[https://github.com/purcell/color-theme-sanityinc-tomorrow][light theme]]:

#+BEGIN_SRC emacs-lisp
  (load-theme 'sanityinc-tomorrow-day t)
#+END_SRC

And a [[https://github.com/Greduan/emacs-theme-gruvbox][dark theme]]:

#+BEGIN_SRC emacs-lisp
  ;(load-theme 'gruvbox-dark-medium t)
#+END_SRC

** Markdown

#+BEGIN_SRC emacs-lisp
  (autoload 'markdown-mode "markdown-mode"
    "Major mode for editing Markdown files" t)
  (add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
  (add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))
  (add-to-list 'auto-mode-alist '("CHANGELOG\\.md\\'" . markdown-mode))

  (autoload 'gfm-mode "markdown-mode"
    "Major mode for editing GitHub Flavored Markdown files" t)
  (add-to-list 'auto-mode-alist '("README\\.md\\'" . gfm-mode))
#+END_SRC

** Neotree

#+BEGIN_SRC emacs-lisp
  (setq neo-autorefresh nil)
  (global-set-key [f8] 'neotree-toggle)
  (global-set-key [f9] 'neotree-dir)
#+END_SRC

** Magit

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x g") 'magit-status)
  (setq git-commit-summary-max-length 50)
  (setq git-commit-fill-column 72)
  (setq magit-completing-read-function 'ivy-completing-read)
#+END_SRC

[[https://github.com/howardabrams/dot-files/blob/master/emacs.org][Howard Abrams]] wrote a nice snippet which lets ~magit-status~ open in fullscreen:

#+BEGIN_SRC emacs-lisp
  (defadvice magit-status (around magit-fullscreen activate)
    (window-configuration-to-register :magit-fullscreen)
    ad-do-it
    (delete-other-windows))
#+END_SRC

** Editorconfig

#+BEGIN_SRC emacs-lisp
  (editorconfig-mode 1)
#+END_SRC

** Ivy, Counsel & Swiper

#+BEGIN_SRC emacs-lisp
  (counsel-mode 1)
  (setq ivy-count-format "%d/%d ")
  (global-set-key (kbd "C-x b") 'ivy-switch-buffer)
  (global-set-key (kbd "C-c f") 'counsel-git)
  (global-set-key (kbd "C-c g") 'counsel-rg)
  (global-set-key (kbd "C-c s") 'swiper)
#+END_SRC

** Company

#+BEGIN_SRC emacs-lisp
  (setq company-idle-delay 0.1)
  (setq company-minimum-prefix-length 3)
  (setq company-show-numbers t)
  (global-company-mode t)
#+END_SRC

The dabbrev backend has some inconvenient default settings (e.g. its suggestions
get downcased, even if notations such as camel casing are used):

#+BEGIN_SRC emacs-lisp
  (setq company-dabbrev-downcase nil)
  (setq company-dabbrev-ignore-case nil)
#+END_SRC

** Elfeed

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x w") 'elfeed)

  (defun fw/youtube-dl (url)
    (start-process "youtube-dl"
                   (concat "*youtube-dl " url "*")
                   "youtube-dl"
                   url))

  (eval-after-load 'elfeed-search
    '(define-key elfeed-search-mode-map "d" 'fw/elfeed-search-youtube-dl))

  ;; Based on https://github.com/skeeto/.emacs.d/blob/master/etc/feed-setup.el
  (defun fw/elfeed-search-youtube-dl ()
    (interactive)
    (let ((entries (elfeed-search-selected)))
      (dolist (entry entries)
        (fw/youtube-dl (elfeed-entry-link entry))
        (message "Downloading %s" (elfeed-entry-title entry))
        (elfeed-untag entry 'unread)
        (elfeed-search-update-entry entry)
        (unless (use-region-p) (forward-line)))))
#+END_SRC

** Expand Region

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-c w") 'er/expand-region)
  (setq expand-region-contract-fast-key "s")
#+END_SRC

* Custom

Additional configuration that is only relevant on a particular machine should be
stored in ~.emacs.d/custom.el~.

#+BEGIN_SRC emacs-lisp
  (when (file-exists-p "~/.emacs.d/custom.el")
    (load-file "~/.emacs.d/custom.el"))
#+END_SRC
